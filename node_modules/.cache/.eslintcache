[{"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\index.js":"1","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\App.js":"2","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\store\\theme.js":"3","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Education\\Education.js":"5","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Home\\Home.js":"6","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Project.js":"8","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\Routes.js":"9","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\ColorModal.js":"10","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Education\\Degree.js":"11","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\PersonalData.js":"12","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\SocialData.js":"13","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\UI\\Button.js":"14","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\SocialLinks\\SocialLinks.js":"15","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\ThemeData.js":"16","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\UI\\Card.js":"17","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\asset\\svg\\svg.js":"18","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\EducationDataBachelor.js":"19","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\EducationDataMaster.js":"20","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Carousel.js":"21","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Jamendo\\jamendo.js":"22","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Modal.js":"23","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\BtnModal.js":"24"},{"size":412,"mtime":1683955328000,"results":"25","hashOfConfig":"26"},{"size":1615,"mtime":1685076395463,"results":"27","hashOfConfig":"26"},{"size":1018,"mtime":1685059936297,"results":"28","hashOfConfig":"26"},{"size":4102,"mtime":1685089485442,"results":"29","hashOfConfig":"26"},{"size":1642,"mtime":1685059341595,"results":"30","hashOfConfig":"26"},{"size":1850,"mtime":1685018171188,"results":"31","hashOfConfig":"26"},{"size":612,"mtime":1683955328000,"results":"32","hashOfConfig":"26"},{"size":607,"mtime":1685101952946,"results":"33","hashOfConfig":"26"},{"size":693,"mtime":1685089579397,"results":"34","hashOfConfig":"26"},{"size":1383,"mtime":1685089714700,"results":"35","hashOfConfig":"26"},{"size":2745,"mtime":1685059352170,"results":"36","hashOfConfig":"26"},{"size":498,"mtime":1685076484733,"results":"37","hashOfConfig":"26"},{"size":330,"mtime":1685011075211,"results":"38","hashOfConfig":"26"},{"size":427,"mtime":1684998276957,"results":"39","hashOfConfig":"26"},{"size":937,"mtime":1685014238594,"results":"40","hashOfConfig":"26"},{"size":494,"mtime":1685059936344,"results":"41","hashOfConfig":"26"},{"size":363,"mtime":1684998281348,"results":"42","hashOfConfig":"26"},{"size":8891,"mtime":1685035275159,"results":"43","hashOfConfig":"26"},{"size":863,"mtime":1685014384149,"results":"44","hashOfConfig":"26"},{"size":528,"mtime":1685013880431,"results":"45","hashOfConfig":"26"},{"size":1951,"mtime":1685089776853,"results":"46","hashOfConfig":"26"},{"size":4736,"mtime":1685058700516,"results":"47","hashOfConfig":"26"},{"size":920,"mtime":1685102585340,"results":"48","hashOfConfig":"26"},{"size":615,"mtime":1685101986599,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rpxqdj",{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\index.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\App.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\store\\theme.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\Navbar.js",["126"],[],"import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\n\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport './navbar.css';\n\nimport { themeActions } from \"../../store/theme\";\n\nimport ColorModal from \"./ColorModal\";\nimport Routes from \"./Routes\";\n\nimport PersonalData from \"../../Data/PersonalData\";\nimport JamendoPlayer from \"../Jamendo/jamendo\";\n\nconst Navbar = () => {\n\n    const menuRef = useRef();\n    const dispatch = useDispatch();\n    const activeNavRoute = useLocation();\n    \n    const nonThemeColor = useSelector(state => state.nonThemeColor);\n    const changeColor = (newColor) => {\n        dispatch(themeActions.changeThemeColor(newColor));\n    }\n\n    const mode = useSelector(state => state.mode);\n    const bgColor = useSelector(state => state.theme.backgroundColor);\n    const activeColor = useSelector(state => state.theme.color);\n\n    const [isDropDownVisible, setIsDropDownVisible] = useState(false);\n    const [isColorModalShown, setColorModalShown] = useState(false);\n\n\n    function handleModeChange() {\n\n        const lightModeBtn = document.getElementById(\"lightModeBtn\")\n        const darkModeBtn = document.getElementById(\"darkModeBtn\")\n        if (mode === 'light') {\n            lightModeBtn.style.display = \"none\";\n            darkModeBtn.style.display = \"block\";\n            darkModeBtn.style.color = \"black\";\n        }\n        else {\n            lightModeBtn.style.display = \"block\";\n            darkModeBtn.style.display = \"none\";\n            lightModeBtn.style.color = \"white\";\n        }\n        dispatch(themeActions.toggleMode());\n    }\n\n    function handleColorSelector() {\n        setColorModalShown(prev => !prev);\n    }\n    function handleDropDown() {\n        setIsDropDownVisible((prevState) => !prevState);\n    }\n\n    \n    let systemTheme='light';\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        systemTheme='dark';\n    }\n\n    useEffect(() => {\n        if (systemTheme==='dark') {\n            handleModeChange();\n        }\n    }, [systemTheme]);\n\n    useEffect(() => {\n        handleDropDown();\n        menuRef.current.checked = false;\n    }, [activeNavRoute])\n\n    return (\n        <div className=\"main\">\n            <div className=\"navbar\" style={{ backgroundColor: bgColor }}>\n                <div className=\"logoContainer\">\n                    <div id=\"logo\">\n                        {PersonalData.firstName}&nbsp;&nbsp;{PersonalData.lastName}\n                    </div>\n                </div>\n                <JamendoPlayer />\n                <div className=\"navsContainer\" style={{ color: nonThemeColor }}>\n                    <Routes />\n                </div>\n                <div className=\"selectTheme\">\n                    <div className=\"selectMode\" onClick={handleModeChange}>\n                        <div id=\"lightModeBtn\" style={{ color: \"white\" }}><LightModeIcon /></div>\n                        <div id=\"darkModeBtn\" style={{ display: \"none\" }}><DarkModeIcon /></div>\n                    </div>\n\n                    <div className=\"colorSelector\" onClick={handleColorSelector} style={{ backgroundColor: activeColor }}>\n                        {\n                            isColorModalShown && <ColorModal selectColor={changeColor} onConfirm={handleColorSelector} />\n                        }\n                    </div>\n\n                    <input type=\"checkbox\" onClick={handleDropDown} ref={menuRef} id=\"burger-toggle\" />\n                    <label htmlFor=\"burger-toggle\" className=\"burger-menu\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </label>\n                </div>\n            </div>\n            {isDropDownVisible && <div className=\"mob-nav\" style={{ color: nonThemeColor }}>\n                <Routes />\n            </div>}\n        </div>\n    )\n}\n\nexport default Navbar;","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Education\\Education.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Home\\Home.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Footer\\Footer.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Project.js",["127"],[],"import React from \"react\";\nimport styles from \"./project.module.css\";\nimport UnsplashCarousel from './Carousel.js';\nimport BtnModal from './BtnModal';\nimport { useSelector } from \"react-redux\";\n\nconst Projects = (props) => {\n    const nonThemeColor = useSelector(state => state.nonThemeColor);\n    const uiColor = useSelector(state => state.uiColor);\n    return (\n        <React.Fragment>\n            <h1 className={styles.projectHeading} style={{ color: nonThemeColor }}>My Projects</h1>\n            <UnsplashCarousel />\n            <BtnModal />\n        </React.Fragment>\n    )\n};\n\nexport default Projects;","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\Routes.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Navbar\\ColorModal.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Education\\Degree.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\PersonalData.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\SocialData.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\UI\\Button.js",["128","129"],[],"import { color } from '@mui/system';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport classes from \"./button.module.css\";\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type || 'button'}\n      className={`${classes.btn} ${props.className}`}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\SocialLinks\\SocialLinks.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\ThemeData.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\UI\\Card.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\asset\\svg\\svg.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\EducationDataBachelor.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\Data\\EducationDataMaster.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Carousel.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Jamendo\\jamendo.js",["130","131"],[],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { IconButton, Slider } from '@mui/material';\r\nimport { SkipPrevious, PlayArrow, Pause, SkipNext } from '@mui/icons-material';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport './jamendo.css';\r\n\r\nconst JamendoPlayer = () => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(new Audio());\r\n\r\n  useEffect(() => {\r\n    const xhrData = () => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        'GET',\r\n        'https://api.jamendo.com/v3.0/tracks/?client_id=e93b5922',\r\n        true\r\n      );\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const tracks = response.results;\r\n          setTracks(tracks);\r\n        } else if (xhr.readyState === 4) {\r\n          console.error('Ошибка получения данных:', xhr.status);\r\n        }\r\n      };\r\n\r\n      xhr.send();\r\n    };\r\n\r\n    xhrData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\r\n    audioRef.current.addEventListener('ended', handleTrackEnd);\r\n    return () => {\r\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audioRef.current.removeEventListener('ended', handleTrackEnd);\r\n    };\r\n  }, [currentTrackIndex]);\r\n\r\n  const handleTimeUpdate = () => {\r\n    setCurrentTime(audioRef.current.currentTime);\r\n  };\r\n\r\n  const handleTrackEnd = () => {\r\n    setIsPlaying(false);\r\n    nextTrack();\r\n  };\r\n\r\n  const playTrack = (audioUrl) => {\r\n    setIsPlaying(true);\r\n    audioRef.current.src = audioUrl;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const pauseTrack = () => {\r\n    setIsPlaying(false);\r\n    audioRef.current.pause();\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    audioRef.current.pause(); // Остановка текущего трека\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex + 1) % tracks.length);\r\n    playTrack(tracks[(currentTrackIndex + 1) % tracks.length]?.audio); // Воспроизведение нового трека\r\n  };\r\n  \r\n  const previousTrack = () => {\r\n    audioRef.current.pause(); // Остановка текущего трека\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex - 1 + tracks.length) % tracks.length);\r\n    playTrack(tracks[(currentTrackIndex - 1 + tracks.length) % tracks.length]?.audio); // Воспроизведение нового трека\r\n  };\r\n\r\n  const handleVolumeChange = (event, newValue) => {\r\n    const normalizedValue = newValue / 100; // Приводим значение к диапазону [0, 1]\r\n    setVolume(newValue);\r\n    audioRef.current.volume = normalizedValue;\r\n  };\r\n\r\n  const handleProgressChange = (event, newValue) => {\r\n    const newTime = (newValue / 100) * duration;\r\n    audioRef.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n  };\r\n\r\n  const handleLoadedMetadata = () => {\r\n    setDuration(audioRef.current.duration);\r\n  };\r\n  const nonThemeColor=useSelector(state=>state.nonThemeColor);\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"player-controls\">\r\n        <IconButton style={{ color: nonThemeColor }} onClick={previousTrack}>\r\n          <SkipPrevious />\r\n        </IconButton>\r\n        {isPlaying ? (\r\n          <IconButton style={{ color: nonThemeColor }} onClick={pauseTrack}>\r\n            <Pause />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton style={{ color: nonThemeColor }} onClick={() => playTrack(tracks[currentTrackIndex]?.audio)}>\r\n            <PlayArrow />\r\n          </IconButton>\r\n        )}\r\n        <IconButton style={{ color: nonThemeColor }} onClick={nextTrack}>\r\n          <SkipNext />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"track-info\">\r\n        <h4>{tracks[currentTrackIndex]?.artist_name} - {tracks[currentTrackIndex]?.name}</h4>\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <Slider\r\n          value={(currentTime / duration) * 100}\r\n          min={0}\r\n          max={100}\r\n          onChange={handleProgressChange}\r\n        />\r\n      </div>\r\n      <div className=\"volume-control\">\r\n        <Slider value={volume} onChange={handleVolumeChange} />\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        onLoadedMetadata={handleLoadedMetadata}\r\n        preload=\"metadata\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JamendoPlayer;\r\n","C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\Modal.js",[],[],"C:\\Users\\user\\source\\repos\\React\\lotr-website\\src\\components\\Projects\\BtnModal.js",[],[],{"ruleId":"132","severity":1,"message":"133","line":70,"column":8,"nodeType":"134","endLine":70,"endColumn":21,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":9,"column":11,"nodeType":"138","messageId":"139","endLine":9,"endColumn":18},{"ruleId":"136","severity":1,"message":"140","line":1,"column":10,"nodeType":"138","messageId":"139","endLine":1,"endColumn":15},{"ruleId":"136","severity":1,"message":"141","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":21},{"ruleId":"132","severity":1,"message":"142","line":47,"column":16,"nodeType":"138","endLine":47,"endColumn":23},{"ruleId":"132","severity":1,"message":"143","line":49,"column":6,"nodeType":"134","endLine":49,"endColumn":25,"suggestions":"144"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleModeChange'. Either include it or remove the dependency array.","ArrayExpression",["145"],"no-unused-vars","'uiColor' is assigned a value but never used.","Identifier","unusedVar","'color' is defined but never used.","'useSelector' is defined but never used.","The ref value 'audioRef.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'audioRef.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'handleTrackEnd'. Either include it or remove the dependency array.",["146"],{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [handleModeChange, systemTheme]",{"range":"151","text":"152"},"Update the dependencies array to be: [currentTrackIndex, handleTrackEnd]",{"range":"153","text":"154"},[2199,2212],"[handleModeChange, systemTheme]",[1638,1657],"[currentTrackIndex, handleTrackEnd]"]