{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\React\\\\lotr-website\\\\src\\\\components\\\\Jamendo\\\\jamendo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PlayButton, PrevButton, NextButton, Progress, Timer } from 'react-soundplayer/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JamendoPlayer = () => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://api.jamendo.com/v3.0/tracks/?client_id=YOUR_JAMENDO_API_KEY`);\n        const data = await response.json();\n        setTracks(data.results);\n      } catch (error) {\n        console.error('Ошибка получения данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const playTrack = () => {\n    setIsPlaying(true);\n  };\n  const pauseTrack = () => {\n    setIsPlaying(false);\n  };\n  const nextTrack = () => {\n    setCurrentTrackIndex(prevIndex => (prevIndex + 1) % tracks.length);\n  };\n  const previousTrack = () => {\n    setCurrentTrackIndex(prevIndex => (prevIndex - 1 + tracks.length) % tracks.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jamendo Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), tracks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tracks[currentTrackIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        src: tracks[currentTrackIndex].audio,\n        controls: true,\n        autoPlay: isPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        className: isPlaying ? 'pause' : 'play',\n        onPlay: playTrack,\n        onPause: pauseTrack,\n        playing: isPlaying\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n        onPrev: previousTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onNext: nextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        duration: tracks[currentTrackIndex].duration,\n        currentTime: 0,\n        bufferedTime: 0\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        duration: tracks[currentTrackIndex].duration,\n        currentTime: 0,\n        ...tracks[currentTrackIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(JamendoPlayer, \"LmJ8WACyGqSu0e2phEeEsVVSRdg=\");\n_c = JamendoPlayer;\nexport default JamendoPlayer;\nvar _c;\n$RefreshReg$(_c, \"JamendoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","PlayButton","PrevButton","NextButton","Progress","Timer","jsxDEV","_jsxDEV","JamendoPlayer","_s","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","fetchData","response","fetch","data","json","results","error","console","playTrack","pauseTrack","nextTrack","prevIndex","length","previousTrack","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","audio","controls","autoPlay","className","onPlay","onPause","playing","onPrev","onNext","duration","currentTime","bufferedTime","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/React/lotr-website/src/components/Jamendo/jamendo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { PlayButton, PrevButton, NextButton, Progress, Timer } from 'react-soundplayer/components';\r\n\r\nconst JamendoPlayer = () => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.jamendo.com/v3.0/tracks/?client_id=YOUR_JAMENDO_API_KEY`\r\n        );\r\n        const data = await response.json();\r\n        setTracks(data.results);\r\n      } catch (error) {\r\n        console.error('Ошибка получения данных:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const playTrack = () => {\r\n    setIsPlaying(true);\r\n  };\r\n\r\n  const pauseTrack = () => {\r\n    setIsPlaying(false);\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex + 1) % tracks.length);\r\n  };\r\n\r\n  const previousTrack = () => {\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex - 1 + tracks.length) % tracks.length);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '64px' }}>\r\n      <h1>Jamendo Player</h1>\r\n      {tracks.length > 0 ? (\r\n        <div>\r\n          <h2>{tracks[currentTrackIndex].name}</h2>\r\n          <audio\r\n            src={tracks[currentTrackIndex].audio}\r\n            controls\r\n            autoPlay={isPlaying}\r\n          />\r\n          <PlayButton\r\n            className={isPlaying ? 'pause' : 'play'}\r\n            onPlay={playTrack}\r\n            onPause={pauseTrack}\r\n            playing={isPlaying}\r\n          />\r\n          <PrevButton onPrev={previousTrack} />\r\n          <NextButton onNext={nextTrack} />\r\n          <Progress\r\n            duration={tracks[currentTrackIndex].duration}\r\n            currentTime={0}\r\n            bufferedTime={0}\r\n          />\r\n          <Timer\r\n            duration={tracks[currentTrackIndex].duration}\r\n            currentTime={0}\r\n            {...tracks[currentTrackIndex]}\r\n          />\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JamendoPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}