{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\React\\\\lotr-website\\\\src\\\\components\\\\Jamendo\\\\jamendo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { withSoundCloudAudio } from 'react-soundplayer/addons';\nimport { PlayButton, PrevButton, NextButton, Progress, Timer } from 'react-soundplayer/components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JamendoPlayer = _ref => {\n  _s();\n  let {\n    track,\n    currentTime\n  } = _ref;\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`https://api.jamendo.com/v3.0/tracks/?client_id=YOUR_JAMENDO_API_KEY`);\n        const data = await response.json();\n        setTracks(data.results);\n      } catch (error) {\n        console.error('Ошибка получения данных:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const playTrack = index => {\n    setCurrentTrackIndex(index);\n  };\n  const nextTrack = () => {\n    setCurrentTrackIndex(prevIndex => (prevIndex + 1) % tracks.length);\n  };\n  const previousTrack = () => {\n    setCurrentTrackIndex(prevIndex => (prevIndex - 1 + tracks.length) % tracks.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '64px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Jamendo Player\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), tracks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: tracks[currentTrackIndex].name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PlayButton, {\n        ...track,\n        streamUrl: tracks[currentTrackIndex].audio,\n        onPlay: () => playTrack(currentTrackIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PrevButton, {\n        onPrev: previousTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n        onNext: nextTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Progress, {\n        ...track\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Timer, {\n        ...track,\n        currentTime: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(JamendoPlayer, \"W5BQ6bdBclYi2udGuC1niG8/AeU=\");\n_c = JamendoPlayer;\nexport default _c2 = withSoundCloudAudio(JamendoPlayer);\nvar _c, _c2;\n$RefreshReg$(_c, \"JamendoPlayer\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","withSoundCloudAudio","PlayButton","PrevButton","NextButton","Progress","Timer","jsxDEV","_jsxDEV","JamendoPlayer","_ref","_s","track","currentTime","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","fetchData","response","fetch","data","json","results","error","console","playTrack","index","nextTrack","prevIndex","length","previousTrack","style","height","children","fileName","_jsxFileName","lineNumber","columnNumber","name","streamUrl","audio","onPlay","onPrev","onNext","_c","_c2","$RefreshReg$"],"sources":["C:/Users/user/source/repos/React/lotr-website/src/components/Jamendo/jamendo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { withSoundCloudAudio } from 'react-soundplayer/addons';\r\nimport { PlayButton, PrevButton, NextButton, Progress, Timer } from 'react-soundplayer/components';\r\n\r\nconst JamendoPlayer = ({ track, currentTime }) => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.jamendo.com/v3.0/tracks/?client_id=YOUR_JAMENDO_API_KEY`\r\n        );\r\n        const data = await response.json();\r\n        setTracks(data.results);\r\n      } catch (error) {\r\n        console.error('Ошибка получения данных:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const playTrack = (index) => {\r\n    setCurrentTrackIndex(index);\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex + 1) % tracks.length);\r\n  };\r\n\r\n  const previousTrack = () => {\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex - 1 + tracks.length) % tracks.length);\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: '64px' }}>\r\n      <h1>Jamendo Player</h1>\r\n      {tracks.length > 0 ? (\r\n        <div>\r\n          <h2>{tracks[currentTrackIndex].name}</h2>\r\n          <PlayButton\r\n            {...track}\r\n            streamUrl={tracks[currentTrackIndex].audio}\r\n            onPlay={() => playTrack(currentTrackIndex)}\r\n          />\r\n          <PrevButton onPrev={previousTrack} />\r\n          <NextButton onNext={nextTrack} />\r\n          <Progress {...track} />\r\n          <Timer {...track} currentTime={currentTime} />\r\n        </div>\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withSoundCloudAudio(JamendoPlayer);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}