{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\React\\\\lotr-website\\\\src\\\\components\\\\Jamendo\\\\jamendo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { IconButton, Slider } from '@mui/material';\nimport { SkipPrevious, PlayArrow, Pause, SkipNext } from '@mui/icons-material';\nimport './jamendo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JamendoPlayer = () => {\n  _s();\n  var _tracks$currentTrackI2, _tracks$currentTrackI3;\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(50);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(new Audio());\n  useEffect(() => {\n    const fetchData = () => {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', 'https://api.jamendo.com/v3.0/tracks/?client_id=e93b5922', true);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const response = JSON.parse(xhr.responseText);\n          const tracks = response.results;\n          setTracks(tracks);\n          console.log(tracks);\n        } else if (xhr.readyState === 4) {\n          console.error('Ошибка получения данных:', xhr.status);\n        }\n      };\n      xhr.send();\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    audioRef.current.addEventListener('ended', handleTrackEnd);\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n      audioRef.current.removeEventListener('ended', handleTrackEnd);\n    };\n  }, [currentTrackIndex]);\n  const handleTimeUpdate = () => {\n    setCurrentTime(audioRef.current.currentTime);\n  };\n  const handleTrackEnd = () => {\n    var _tracks$nextIndex;\n    setIsPlaying(false);\n    setCurrentTime(0);\n    const nextIndex = (currentTrackIndex + 1) % tracks.length;\n    setCurrentTrackIndex(nextIndex);\n    audioRef.current.src = (_tracks$nextIndex = tracks[nextIndex]) === null || _tracks$nextIndex === void 0 ? void 0 : _tracks$nextIndex.audio;\n    audioRef.current.play();\n  };\n  const playTrack = audioUrl => {\n    setIsPlaying(true);\n    audioRef.current.src = audioUrl;\n    audioRef.current.play();\n  };\n  const pauseTrack = () => {\n    setIsPlaying(false);\n    audioRef.current.pause();\n  };\n  const nextTrack = () => {\n    var _tracks$nextIndex2;\n    const nextIndex = (currentTrackIndex + 1) % tracks.length;\n    setCurrentTrackIndex(nextIndex);\n    audioRef.current.src = (_tracks$nextIndex2 = tracks[nextIndex]) === null || _tracks$nextIndex2 === void 0 ? void 0 : _tracks$nextIndex2.audio;\n    audioRef.current.play();\n  };\n  const previousTrack = () => {\n    var _tracks$prevIndex;\n    const prevIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\n    setCurrentTrackIndex(prevIndex);\n    audioRef.current.src = (_tracks$prevIndex = tracks[prevIndex]) === null || _tracks$prevIndex === void 0 ? void 0 : _tracks$prevIndex.audio;\n    audioRef.current.play();\n  };\n  const handleVolumeChange = (event, newValue) => {\n    const normalizedValue = newValue / 100; // Приводим значение к диапазону [0, 1]\n    setVolume(newValue);\n    audioRef.current.volume = normalizedValue;\n  };\n  const handleProgressChange = (event, newValue) => {\n    const newTime = newValue / 100 * duration;\n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const formatTime = timeInSeconds => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const handleLoadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: previousTrack,\n        children: /*#__PURE__*/_jsxDEV(SkipPrevious, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), isPlaying ? /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: pauseTrack,\n        children: /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          var _tracks$currentTrackI;\n          return playTrack((_tracks$currentTrackI = tracks[currentTrackIndex]) === null || _tracks$currentTrackI === void 0 ? void 0 : _tracks$currentTrackI.audio);\n        },\n        children: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: nextTrack,\n        children: /*#__PURE__*/_jsxDEV(SkipNext, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [(_tracks$currentTrackI2 = tracks[currentTrackIndex]) === null || _tracks$currentTrackI2 === void 0 ? void 0 : _tracks$currentTrackI2.artist_name, \" - \", (_tracks$currentTrackI3 = tracks[currentTrackIndex]) === null || _tracks$currentTrackI3 === void 0 ? void 0 : _tracks$currentTrackI3.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentTime / duration * 100,\n        min: 0,\n        max: 100,\n        onChange: handleProgressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-control\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onLoadedMetadata: handleLoadedMetadata,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(JamendoPlayer, \"I7RY24qADU9GC+F0vAvzyslZFsw=\");\n_c = JamendoPlayer;\nexport default JamendoPlayer;\nvar _c;\n$RefreshReg$(_c, \"JamendoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","IconButton","Slider","SkipPrevious","PlayArrow","Pause","SkipNext","jsxDEV","_jsxDEV","JamendoPlayer","_s","_tracks$currentTrackI2","_tracks$currentTrackI3","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","volume","setVolume","currentTime","setCurrentTime","duration","setDuration","audioRef","Audio","fetchData","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","results","console","log","error","send","current","addEventListener","handleTimeUpdate","handleTrackEnd","removeEventListener","_tracks$nextIndex","nextIndex","length","src","audio","play","playTrack","audioUrl","pauseTrack","pause","nextTrack","_tracks$nextIndex2","previousTrack","_tracks$prevIndex","prevIndex","handleVolumeChange","event","newValue","normalizedValue","handleProgressChange","newTime","formatTime","timeInSeconds","minutes","Math","floor","seconds","toString","padStart","handleLoadedMetadata","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_tracks$currentTrackI","artist_name","name","value","min","max","onChange","ref","onLoadedMetadata","preload","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/React/lotr-website/src/components/Jamendo/jamendo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { IconButton, Slider } from '@mui/material';\r\nimport { SkipPrevious, PlayArrow, Pause, SkipNext } from '@mui/icons-material';\r\n\r\nimport './jamendo.css';\r\n\r\nconst JamendoPlayer = () => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(new Audio());\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\r\n        'GET',\r\n        'https://api.jamendo.com/v3.0/tracks/?client_id=e93b5922',\r\n        true\r\n      );\r\n\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const tracks = response.results;\r\n          setTracks(tracks);\r\n          console.log(tracks);\r\n        } else if (xhr.readyState === 4) {\r\n          console.error('Ошибка получения данных:', xhr.status);\r\n        }\r\n      };\r\n\r\n      xhr.send();\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\r\n    audioRef.current.addEventListener('ended', handleTrackEnd);\r\n    return () => {\r\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audioRef.current.removeEventListener('ended', handleTrackEnd);\r\n    };\r\n  }, [currentTrackIndex]);\r\n\r\n  const handleTimeUpdate = () => {\r\n    setCurrentTime(audioRef.current.currentTime);\r\n  };\r\n\r\n  const handleTrackEnd = () => {\r\n    setIsPlaying(false);\r\n    setCurrentTime(0);\r\n    const nextIndex = (currentTrackIndex + 1) % tracks.length;\r\n    setCurrentTrackIndex(nextIndex);\r\n    audioRef.current.src = tracks[nextIndex]?.audio;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const playTrack = (audioUrl) => {\r\n    setIsPlaying(true);\r\n    audioRef.current.src = audioUrl;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const pauseTrack = () => {\r\n    setIsPlaying(false);\r\n    audioRef.current.pause();\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    const nextIndex = (currentTrackIndex + 1) % tracks.length;\r\n    setCurrentTrackIndex(nextIndex);\r\n    audioRef.current.src = tracks[nextIndex]?.audio;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const previousTrack = () => {\r\n    const prevIndex = (currentTrackIndex - 1 + tracks.length) % tracks.length;\r\n    setCurrentTrackIndex(prevIndex);\r\n    audioRef.current.src = tracks[prevIndex]?.audio;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const handleVolumeChange = (event, newValue) => {\r\n    const normalizedValue = newValue / 100; // Приводим значение к диапазону [0, 1]\r\n    setVolume(newValue);\r\n    audioRef.current.volume = normalizedValue;\r\n  };\r\n\r\n  const handleProgressChange = (event, newValue) => {\r\n    const newTime = (newValue / 100) * duration;\r\n    audioRef.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n  };\r\n\r\n  const formatTime = (timeInSeconds) => {\r\n    const minutes = Math.floor(timeInSeconds / 60);\r\n    const seconds = Math.floor(timeInSeconds % 60);\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n\r\n\r\n  const handleLoadedMetadata = () => {\r\n    setDuration(audioRef.current.duration);\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"player-controls\">\r\n        <IconButton onClick={previousTrack}>\r\n          <SkipPrevious />\r\n        </IconButton>\r\n        {isPlaying ? (\r\n          <IconButton onClick={pauseTrack}>\r\n            <Pause />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton onClick={() => playTrack(tracks[currentTrackIndex]?.audio)}>\r\n            <PlayArrow />\r\n          </IconButton>\r\n        )}\r\n        <IconButton onClick={nextTrack}>\r\n          <SkipNext />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"track-info\">\r\n        <h4>{tracks[currentTrackIndex]?.artist_name} - {tracks[currentTrackIndex]?.name}</h4>\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <Slider\r\n          value={(currentTime / duration) * 100}\r\n          min={0}\r\n          max={100}\r\n          onChange={handleProgressChange}\r\n        />\r\n      </div>\r\n      <div className=\"volume-control\">\r\n        <Slider value={volume} onChange={handleVolumeChange} />\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        onLoadedMetadata={handleLoadedMetadata}\r\n        preload=\"metadata\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JamendoPlayer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}