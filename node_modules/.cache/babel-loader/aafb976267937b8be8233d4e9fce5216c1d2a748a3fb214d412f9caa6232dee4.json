{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\React\\\\lotr-website\\\\src\\\\components\\\\Navbar\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport LastFMPlayer from \"../LastFm/lastfm\";\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport './navbar.css';\nimport { themeActions } from \"../../store/theme\";\nimport ColorModal from \"./ColorModal\";\nimport Routes from \"./Routes\";\nimport PersonalData from \"../../Data/PersonalData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const menuRef = useRef();\n  const dispatch = useDispatch();\n  const activeNavRoute = useLocation();\n  const nonThemeColor = useSelector(state => state.nonThemeColor);\n  const changeColor = newColor => {\n    dispatch(themeActions.changeThemeColor(newColor));\n  };\n  const mode = useSelector(state => state.mode);\n  const bgColor = useSelector(state => state.theme.backgroundColor);\n  const activeColor = useSelector(state => state.theme.color);\n\n  // const [mode, setMode] = useState(\"light\");\n  const [isDropDownVisible, setIsDropDownVisible] = useState(false);\n  const [isColorModalShown, setColorModalShown] = useState(false);\n  function handleModeChange() {\n    const lightModeBtn = document.getElementById(\"lightModeBtn\");\n    const darkModeBtn = document.getElementById(\"darkModeBtn\");\n    if (mode === 'light') {\n      lightModeBtn.style.display = \"none\";\n      darkModeBtn.style.display = \"block\";\n      darkModeBtn.style.color = \"black\";\n    } else {\n      lightModeBtn.style.display = \"block\";\n      darkModeBtn.style.display = \"none\";\n      lightModeBtn.style.color = \"white\";\n    }\n    dispatch(themeActions.toggleMode());\n  }\n  function handleColorSelector() {\n    setColorModalShown(prev => !prev);\n  }\n  function handleDropDown() {\n    setIsDropDownVisible(prevState => !prevState);\n  }\n  let systemTheme = 'light';\n  if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n    systemTheme = 'dark';\n  }\n  useEffect(() => {\n    if (systemTheme === 'dark') {\n      handleModeChange();\n    }\n  }, [systemTheme]);\n  useEffect(() => {\n    handleDropDown();\n    menuRef.current.checked = false;\n  }, [activeNavRoute]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar\",\n      style: {\n        backgroundColor: bgColor\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logoContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"logo\",\n          children: [PersonalData.firstName, \"\\xA0\\xA0\", PersonalData.lastName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LastFMPlayer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navsContainer\",\n        style: {\n          color: nonThemeColor\n        },\n        children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectTheme\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selectMode\",\n          onClick: handleModeChange,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"lightModeBtn\",\n            style: {\n              color: \"white\"\n            },\n            children: /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"darkModeBtn\",\n            style: {\n              display: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 75\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"colorSelector\",\n          onClick: handleColorSelector,\n          style: {\n            backgroundColor: activeColor\n          },\n          children: isColorModalShown && /*#__PURE__*/_jsxDEV(ColorModal, {\n            selectColor: changeColor,\n            onConfirm: handleColorSelector\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: handleDropDown,\n          ref: menuRef,\n          id: \"burger-toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"burger-toggle\",\n          className: \"burger-menu\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"line\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), isDropDownVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mob-nav\",\n      style: {\n        color: nonThemeColor\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"Chc6oZtpkCvuetl+sZVkHN2M1KU=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useDispatch","useSelector","useLocation","LastFMPlayer","LightModeIcon","DarkModeIcon","themeActions","ColorModal","Routes","PersonalData","jsxDEV","_jsxDEV","Navbar","_s","menuRef","dispatch","activeNavRoute","nonThemeColor","state","changeColor","newColor","changeThemeColor","mode","bgColor","theme","backgroundColor","activeColor","color","isDropDownVisible","setIsDropDownVisible","isColorModalShown","setColorModalShown","handleModeChange","lightModeBtn","document","getElementById","darkModeBtn","style","display","toggleMode","handleColorSelector","prev","handleDropDown","prevState","systemTheme","window","matchMedia","matches","current","checked","className","children","id","firstName","lastName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","selectColor","onConfirm","type","ref","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/React/lotr-website/src/components/Navbar/Navbar.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport LastFMPlayer from \"../LastFm/lastfm\"\n\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport './navbar.css';\n\nimport { themeActions } from \"../../store/theme\";\n\nimport ColorModal from \"./ColorModal\";\nimport Routes from \"./Routes\";\n\nimport PersonalData from \"../../Data/PersonalData\";\n\nconst Navbar = () => {\n\n    const menuRef = useRef();\n    const dispatch = useDispatch();\n    const activeNavRoute = useLocation();\n    \n    const nonThemeColor = useSelector(state => state.nonThemeColor);\n    const changeColor = (newColor) => {\n        dispatch(themeActions.changeThemeColor(newColor));\n    }\n\n    const mode = useSelector(state => state.mode);\n    const bgColor = useSelector(state => state.theme.backgroundColor);\n    const activeColor = useSelector(state => state.theme.color);\n\n    // const [mode, setMode] = useState(\"light\");\n    const [isDropDownVisible, setIsDropDownVisible] = useState(false);\n    const [isColorModalShown, setColorModalShown] = useState(false);\n\n\n    function handleModeChange() {\n\n        const lightModeBtn = document.getElementById(\"lightModeBtn\")\n        const darkModeBtn = document.getElementById(\"darkModeBtn\")\n        if (mode === 'light') {\n            lightModeBtn.style.display = \"none\";\n            darkModeBtn.style.display = \"block\";\n            darkModeBtn.style.color = \"black\";\n        }\n        else {\n            lightModeBtn.style.display = \"block\";\n            darkModeBtn.style.display = \"none\";\n            lightModeBtn.style.color = \"white\";\n        }\n        dispatch(themeActions.toggleMode());\n    }\n\n    function handleColorSelector() {\n        setColorModalShown(prev => !prev);\n    }\n    function handleDropDown() {\n        setIsDropDownVisible((prevState) => !prevState);\n    }\n\n    \n    let systemTheme='light';\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        systemTheme='dark';\n    }\n\n    useEffect(() => {\n        if (systemTheme==='dark') {\n            handleModeChange();\n        }\n    }, [systemTheme]);\n\n    useEffect(() => {\n        handleDropDown();\n        menuRef.current.checked = false;\n    }, [activeNavRoute])\n\n    return (\n        <div className=\"main\">\n            <div className=\"navbar\" style={{ backgroundColor: bgColor }}>\n                <div className=\"logoContainer\">\n                    <div id=\"logo\">\n                        {PersonalData.firstName}&nbsp;&nbsp;{PersonalData.lastName}\n                    </div>\n                </div>\n                <LastFMPlayer />\n                <div className=\"navsContainer\" style={{ color: nonThemeColor }}>\n                    <Routes />\n                </div>\n                <div className=\"selectTheme\">\n                    <div className=\"selectMode\" onClick={handleModeChange}>\n                        <div id=\"lightModeBtn\" style={{ color: \"white\" }}><LightModeIcon /></div>\n                        <div id=\"darkModeBtn\" style={{ display: \"none\" }}><DarkModeIcon /></div>\n                    </div>\n\n                    <div className=\"colorSelector\" onClick={handleColorSelector} style={{ backgroundColor: activeColor }}>\n                        {\n                            isColorModalShown && <ColorModal selectColor={changeColor} onConfirm={handleColorSelector} />\n                        }\n                    </div>\n\n                    <input type=\"checkbox\" onClick={handleDropDown} ref={menuRef} id=\"burger-toggle\" />\n                    <label htmlFor=\"burger-toggle\" className=\"burger-menu\">\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                        <div className=\"line\"></div>\n                    </label>\n                </div>\n            </div>\n            {isDropDownVisible && <div className=\"mob-nav\" style={{ color: nonThemeColor }}>\n                <Routes />\n            </div>}\n        </div>\n    )\n}\n\nexport default Navbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}