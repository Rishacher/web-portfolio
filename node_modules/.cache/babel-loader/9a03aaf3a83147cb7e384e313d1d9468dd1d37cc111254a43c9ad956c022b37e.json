{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\source\\\\repos\\\\React\\\\lotr-website\\\\src\\\\components\\\\Jamendo\\\\jamendo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { IconButton, Slider } from '@mui/material';\nimport { SkipPrevious, PlayArrow, Pause, SkipNext } from '@mui/icons-material';\nimport './jamendo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JamendoPlayer = () => {\n  _s();\n  var _tracks$currentTrackI2, _tracks$currentTrackI3;\n  const [tracks, setTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(50);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(new Audio());\n  useEffect(() => {\n    const fetchData = () => {\n      const seed = Math.random().toString(36).substring(7); // Генерация случайного значения seed\n      const url = `https://api.jamendo.com/v3.0/tracks/?client_id=e93b5922&seed=${seed}`;\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const response = JSON.parse(xhr.responseText);\n          const tracks = response.results;\n          setTracks(tracks);\n          console.log(tracks);\n        } else if (xhr.readyState === 4) {\n          console.error('Ошибка получения данных:', xhr.status);\n        }\n      };\n      xhr.send();\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\n    audioRef.current.addEventListener('ended', handleTrackEnd);\n    return () => {\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\n      audioRef.current.removeEventListener('ended', handleTrackEnd);\n    };\n  }, [currentTrackIndex]);\n  const handleTimeUpdate = () => {\n    setCurrentTime(audioRef.current.currentTime);\n  };\n  const handleTrackEnd = () => {\n    setIsPlaying(false);\n    nextTrack();\n  };\n  const playTrack = audioUrl => {\n    setIsPlaying(true);\n    audioRef.current.src = audioUrl;\n    audioRef.current.play();\n  };\n  const pauseTrack = () => {\n    setIsPlaying(false);\n    audioRef.current.pause();\n  };\n  const nextTrack = () => {\n    var _tracks;\n    audioRef.current.pause(); // Остановка текущего трека\n    setCurrentTrackIndex(prevIndex => (prevIndex + 1) % tracks.length);\n    playTrack((_tracks = tracks[(currentTrackIndex + 1) % tracks.length]) === null || _tracks === void 0 ? void 0 : _tracks.audio); // Воспроизведение нового трека\n  };\n\n  const previousTrack = () => {\n    var _tracks2;\n    audioRef.current.pause(); // Остановка текущего трека\n    setCurrentTrackIndex(prevIndex => (prevIndex - 1 + tracks.length) % tracks.length);\n    playTrack((_tracks2 = tracks[(currentTrackIndex - 1 + tracks.length) % tracks.length]) === null || _tracks2 === void 0 ? void 0 : _tracks2.audio); // Воспроизведение нового трека\n  };\n\n  const handleVolumeChange = (event, newValue) => {\n    const normalizedValue = newValue / 100; // Приводим значение к диапазону [0, 1]\n    setVolume(newValue);\n    audioRef.current.volume = normalizedValue;\n  };\n  const handleProgressChange = (event, newValue) => {\n    const newTime = newValue / 100 * duration;\n    audioRef.current.currentTime = newTime;\n    setCurrentTime(newTime);\n  };\n  const formatTime = timeInSeconds => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const handleLoadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: previousTrack,\n        children: /*#__PURE__*/_jsxDEV(SkipPrevious, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), isPlaying ? /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: pauseTrack,\n        children: /*#__PURE__*/_jsxDEV(Pause, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: () => {\n          var _tracks$currentTrackI;\n          return playTrack((_tracks$currentTrackI = tracks[currentTrackIndex]) === null || _tracks$currentTrackI === void 0 ? void 0 : _tracks$currentTrackI.audio);\n        },\n        children: /*#__PURE__*/_jsxDEV(PlayArrow, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: nextTrack,\n        children: /*#__PURE__*/_jsxDEV(SkipNext, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track-info\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [(_tracks$currentTrackI2 = tracks[currentTrackIndex]) === null || _tracks$currentTrackI2 === void 0 ? void 0 : _tracks$currentTrackI2.artist_name, \" - \", (_tracks$currentTrackI3 = tracks[currentTrackIndex]) === null || _tracks$currentTrackI3 === void 0 ? void 0 : _tracks$currentTrackI3.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: currentTime / duration * 100,\n        min: 0,\n        max: 100,\n        onChange: handleProgressChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-control\",\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        value: volume,\n        onChange: handleVolumeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onLoadedMetadata: handleLoadedMetadata,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(JamendoPlayer, \"I7RY24qADU9GC+F0vAvzyslZFsw=\");\n_c = JamendoPlayer;\nexport default JamendoPlayer;\nvar _c;\n$RefreshReg$(_c, \"JamendoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","useRef","IconButton","Slider","SkipPrevious","PlayArrow","Pause","SkipNext","jsxDEV","_jsxDEV","JamendoPlayer","_s","_tracks$currentTrackI2","_tracks$currentTrackI3","tracks","setTracks","currentTrackIndex","setCurrentTrackIndex","isPlaying","setIsPlaying","volume","setVolume","currentTime","setCurrentTime","duration","setDuration","audioRef","Audio","fetchData","seed","Math","random","toString","substring","url","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","results","console","log","error","send","current","addEventListener","handleTimeUpdate","handleTrackEnd","removeEventListener","nextTrack","playTrack","audioUrl","src","play","pauseTrack","pause","_tracks","prevIndex","length","audio","previousTrack","_tracks2","handleVolumeChange","event","newValue","normalizedValue","handleProgressChange","newTime","formatTime","timeInSeconds","minutes","floor","seconds","padStart","handleLoadedMetadata","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_tracks$currentTrackI","artist_name","name","value","min","max","onChange","ref","onLoadedMetadata","preload","_c","$RefreshReg$"],"sources":["C:/Users/user/source/repos/React/lotr-website/src/components/Jamendo/jamendo.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { IconButton, Slider } from '@mui/material';\r\nimport { SkipPrevious, PlayArrow, Pause, SkipNext } from '@mui/icons-material';\r\n\r\nimport './jamendo.css';\r\n\r\nconst JamendoPlayer = () => {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [volume, setVolume] = useState(50);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const audioRef = useRef(new Audio());\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      const seed = Math.random().toString(36).substring(7); // Генерация случайного значения seed\r\n      const url = `https://api.jamendo.com/v3.0/tracks/?client_id=e93b5922&seed=${seed}`;\r\n\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url, true);\r\n      xhr.onreadystatechange = function () {\r\n        if (xhr.readyState === 4 && xhr.status === 200) {\r\n          const response = JSON.parse(xhr.responseText);\r\n          const tracks = response.results;\r\n          setTracks(tracks);\r\n          console.log(tracks);\r\n        } else if (xhr.readyState === 4) {\r\n          console.error('Ошибка получения данных:', xhr.status);\r\n        }\r\n      };\r\n      xhr.send();\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    audioRef.current.addEventListener('timeupdate', handleTimeUpdate);\r\n    audioRef.current.addEventListener('ended', handleTrackEnd);\r\n    return () => {\r\n      audioRef.current.removeEventListener('timeupdate', handleTimeUpdate);\r\n      audioRef.current.removeEventListener('ended', handleTrackEnd);\r\n    };\r\n  }, [currentTrackIndex]);\r\n\r\n  const handleTimeUpdate = () => {\r\n    setCurrentTime(audioRef.current.currentTime);\r\n  };\r\n\r\n  const handleTrackEnd = () => {\r\n    setIsPlaying(false);\r\n    nextTrack();\r\n  };\r\n\r\n  const playTrack = (audioUrl) => {\r\n    setIsPlaying(true);\r\n    audioRef.current.src = audioUrl;\r\n    audioRef.current.play();\r\n  };\r\n\r\n  const pauseTrack = () => {\r\n    setIsPlaying(false);\r\n    audioRef.current.pause();\r\n  };\r\n\r\n  const nextTrack = () => {\r\n    audioRef.current.pause(); // Остановка текущего трека\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex + 1) % tracks.length);\r\n    playTrack(tracks[(currentTrackIndex + 1) % tracks.length]?.audio); // Воспроизведение нового трека\r\n  };\r\n\r\n  const previousTrack = () => {\r\n    audioRef.current.pause(); // Остановка текущего трека\r\n    setCurrentTrackIndex((prevIndex) => (prevIndex - 1 + tracks.length) % tracks.length);\r\n    playTrack(tracks[(currentTrackIndex - 1 + tracks.length) % tracks.length]?.audio); // Воспроизведение нового трека\r\n  };\r\n\r\n  const handleVolumeChange = (event, newValue) => {\r\n    const normalizedValue = newValue / 100; // Приводим значение к диапазону [0, 1]\r\n    setVolume(newValue);\r\n    audioRef.current.volume = normalizedValue;\r\n  };\r\n\r\n  const handleProgressChange = (event, newValue) => {\r\n    const newTime = (newValue / 100) * duration;\r\n    audioRef.current.currentTime = newTime;\r\n    setCurrentTime(newTime);\r\n  };\r\n\r\n  const formatTime = (timeInSeconds) => {\r\n    const minutes = Math.floor(timeInSeconds / 60);\r\n    const seconds = Math.floor(timeInSeconds % 60);\r\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const handleLoadedMetadata = () => {\r\n    setDuration(audioRef.current.duration);\r\n  };\r\n\r\n  return (\r\n    <div className=\"player-container\">\r\n      <div className=\"player-controls\">\r\n        <IconButton onClick={previousTrack}>\r\n          <SkipPrevious />\r\n        </IconButton>\r\n        {isPlaying ? (\r\n          <IconButton onClick={pauseTrack}>\r\n            <Pause />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton onClick={() => playTrack(tracks[currentTrackIndex]?.audio)}>\r\n            <PlayArrow />\r\n          </IconButton>\r\n        )}\r\n        <IconButton onClick={nextTrack}>\r\n          <SkipNext />\r\n        </IconButton>\r\n      </div>\r\n      <div className=\"track-info\">\r\n        <h4>{tracks[currentTrackIndex]?.artist_name} - {tracks[currentTrackIndex]?.name}</h4>\r\n      </div>\r\n      <div className=\"progress-bar\">\r\n        <Slider\r\n          value={(currentTime / duration) * 100}\r\n          min={0}\r\n          max={100}\r\n          onChange={handleProgressChange}\r\n        />\r\n      </div>\r\n      <div className=\"volume-control\">\r\n        <Slider value={volume} onChange={handleVolumeChange} />\r\n      </div>\r\n      <audio\r\n        ref={audioRef}\r\n        onLoadedMetadata={handleLoadedMetadata}\r\n        preload=\"metadata\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JamendoPlayer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}